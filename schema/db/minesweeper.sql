-- MySQL Script generated by MySQL Workbench
-- 06/28/16 17:34:10
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema minesweeper
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema minesweeper
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `minesweeper` DEFAULT CHARACTER SET utf8 ;
USE `minesweeper` ;

-- -----------------------------------------------------
-- Table `minesweeper`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `minesweeper`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'A unique ID for the user in the game, not changeable.',
  `email` VARCHAR(255) NOT NULL COMMENT 'The user\'s emagamesil address. It must be unique and it can be changed.\nUsed for user validation/password reset.',
  `password` VARCHAR(511) NOT NULL COMMENT 'A salt + password hash, used to verify against when the user logs in.',
  `display_name` VARCHAR(32) NOT NULL COMMENT 'A name the user will go by in the game/high scores/etc. Not unique, changeable.',
  `active` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Whether the user has activated their account via email.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC));


-- -----------------------------------------------------
-- Table `minesweeper`.`user_password_reset_tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `minesweeper`.`user_password_reset_tokens` (
  `user_id` INT UNSIGNED NOT NULL COMMENT 'The ID of the user the token applies to.',
  `token` VARCHAR(45) NULL COMMENT 'A generated token for password reset.',
  `issued_at` DATETIME NULL DEFAULT NOW() COMMENT 'Time the token was issued at, to allow checking for validity.',
  INDEX `fk_password_reset_tokens_users_idx` (`user_id` ASC),
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_password_reset_tokens_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `minesweeper`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `minesweeper`.`games`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `minesweeper`.`games` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'A unique ID for the game.',
  `private` TINYINT(1) NOT NULL COMMENT 'Was this a private (listed) game room?',
  `host_user_id` INT UNSIGNED NOT NULL COMMENT 'ID of the user who hosted this game.',
  `game_start_time` DATETIME NOT NULL DEFAULT NOW() COMMENT 'The time the game started at.',
  `game_finish_time` DATETIME NOT NULL COMMENT 'Time the game ended.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `host_user_id_idx` (`host_user_id` ASC),
  CONSTRAINT `host_user_id`
    FOREIGN KEY (`host_user_id`)
    REFERENCES `minesweeper`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `minesweeper`.`user_activation_tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `minesweeper`.`user_activation_tokens` (
  `user_id` INT UNSIGNED NOT NULL COMMENT 'The ID of the user the token applies to.',
  `token` VARCHAR(128) NULL COMMENT 'A generated token for user activation.',
  `issued_at` DATETIME NULL DEFAULT NOW() COMMENT 'Time the token was issued at, to allow checking for validity.',
  INDEX `fk_password_reset_tokens_users_idx` (`user_id` ASC),
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_password_reset_tokens_users0`
    FOREIGN KEY (`user_id`)
    REFERENCES `minesweeper`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `minesweeper`.`games_played`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `minesweeper`.`games_played` (
  `user_id` INT UNSIGNED NOT NULL COMMENT 'ID of the user who played a game.',
  `game_id` INT UNSIGNED NOT NULL COMMENT 'The ID of the game the user played.',
  `score` INT NOT NULL DEFAULT 0 COMMENT 'The score the user scored.',
  PRIMARY KEY (`user_id`, `game_id`),
  INDEX `game_id_idx` (`game_id` ASC),
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `minesweeper`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `game_id`
    FOREIGN KEY (`game_id`)
    REFERENCES `minesweeper`.`games` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
